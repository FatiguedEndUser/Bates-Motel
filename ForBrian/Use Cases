
****Version 1 (Basic): Hotel Management System: Standard Use Cases****

Use Case 1 (First Feature to Implement): User Registration & Login
1. User: Customer (Guest/Unregistered user becoming a Registered user)
     °Description:
        > A guest visits the website, creates an account by entering personal details (name, email, password, etc.), then logs 
           in. This is necessary before accessing booking, loyalty, or payment features.

   °Reason to Implement First:
        > Registration and login are foundational features that unlock most of the other user-specific functionality.


Use Case 2: Book a Room
2. User: Customer (Registered user)
     °Description:
        > A registered customer searches available rooms for specified dates, selects a room type, and completes the reservation (potentially using loyalty points or standard payment).


Use Case 3: Payment Processing
3. User: Customer, Clerk (sometimes Manager)
     °Description:
        > A customer or clerk (on behalf of the customer) reviews the booking costs, selects a payment method (credit card, 
          loyalty points, or both), and finalizes payment.
        > The system confirms the payment and updates the booking status.


Use Case 4: Loyalty Program Management
4. User: Customer, Manager (for adjustments)
     °Description:
        > A customer earns points for each booking or additional service.
        > They can view their points balance and redeem them for discounts or room upgrades.
        > Manager can make manual adjustments if there’s an error.


Use Case 5: Online Check-In
5. User: Customer
     °Description:
         > A customer completes an online “pre-check-in,” providing necessary information and confirming arrival time. This 
           helps streamline on-site check-in or if a clerk is unavailable.


Use Case 6: Manager Views Bookings
6. User: Admin/Manager
     °Description:
         > The Manager logs into the system and sees a dashboard of current, upcoming, and past reservations.
         > They can filter by date, room type, or customer name, and take actions like canceling or modifying reservations if 
           needed.


Use Case 7: Manager Manages Employee Accounts
7. User: Admin/Manager
     °Description:
         > The Manager can create or delete employee accounts, update roles (e.g., Clerk, Housekeeping, Valet), and ensure 
           access privileges are properly assigned.
         > If an employee quits or is fired, the Manager removes them from the system or sets an end date.


Use Case 8: Manager Approves/Rejects Employee PTO
8. User: Admin/Manager
     °Description:
         > An employee submits a PTO request through their employee account.
         > The Manager reviews the request, checks scheduling needs, and either approves or rejects it.
         > The system updates the employee’s PTO balance and schedules accordingly.


Use Case 9: Employee Clock In/Out
9. User: Employee (Clerks, Housekeeping, Valet, Maintenance, etc.)
     °Description:
         > An employee logs into their account to start or end their shift.
         > The system records the timestamp and updates the employee’s timesheet.
         > Managers can view or adjust these if an error occurs.


Use Case 10: Employee Checks Bookings & Room Occupancy
10. User: Employee (Clerk, Housekeeping, e.g.)
      °Description:
         > An employee looks up current bookings to see which rooms are occupied or due to be checked in/out.
         > This helps coordinate check-ins, check-outs, housekeeping schedules, or maintenance tasks.


Use Case 11: Employee Manages Personal Account
11. User: Employee (any staff member)
      °Description:
         > The employee logs into their account.
         > They can view or update personal details (name, contact info, etc.), check available PTO, review their timesheet,  
           or access tax documentation.
       

Use Case 12: Employee Submits Maintenance/Service Requests
12. User: Employee (Housekeeping, Maintenance, Valet, etc.)
      °Description:
         > If an employee spots an issue (e.g., broken AC, plumbing problem), they submit a request in the system.
         > Maintenance employees or Managers see the request in their queue, assign it, and update status once completed.



****Version 2 (Enhanced): Hotel Management System: Expanded Use Cases with Flow Analysis****


*Use Case 1 (First Feature to Implement): User Registration & Login*
User: Customer (Guest becoming a Registered user)
 Basic Flow:
   > A guest navigates to the website and clicks "Sign Up."
   > The guest enters personal details (name, email, password, etc.).
   > The system validates the input and creates a new account.
   > The guest logs in with the new credentials and is redirected to their dashboard.

 Alternate Flow:
   > If registration fails (e.g., email already in use), an error message is displayed prompting the guest to try again.

 Preconditions:
   > The guest has internet access and a valid email address.

 Postconditions:
  > The guest becomes a registered customer and is logged in.


*Use Case 2: Book a Room*
2. User: Customer (Registered user)
 Basic Flow:
   > The customer logs in and selects "Book a Room."
   > They search for available rooms using dates and room type filters.
   > The customer selects a room, reviews details, and confirms the booking.
   > The system stores the reservation and sends a confirmation.

 Alternate Flow:
   > If no rooms are available, the system displays alternative options or suggests modifying search criteria.

 Preconditions:
 
   > The customer is logged in and there is room availability.

 Postconditions:
   > A new booking is recorded in the system.


*Use Case 3: Payment Processing*
User: Customer, Clerk (on behalf of the customer)
 Basic Flow:
   > The customer reviews the booking and total cost.
   > They choose a payment method (credit card, loyalty points, or both) and enter payment details.
   > The system processes the payment and confirms the transaction.
   > The booking status is updated accordingly.

 Alternate Flow:
   > If payment processing fails, an error message is shown and the customer is prompted to re-enter payment details.

 Preconditions:
   > The customer has a valid payment method available.

 Postconditions:
   > Payment is successfully processed, and the booking is confirmed.


*Use Case 4: Loyalty Program Management*
User: Customer, Manager (for adjustments)
 Basic Flow:
   > A customer earns loyalty points through bookings or additional services.
   > They view their current points balance in their account.
   > During booking, the customer redeems points for discounts or upgrades.

 Alternate Flow:
   > If the customer does not have enough points, the system informs them and suggests alternatives.

 Preconditions:
   > The customer must have an active loyalty program account.

 Postconditions:
   > Loyalty points are updated and applied to the booking if redeemed.


*Use Case 5: Online Check-In*
User: Customer
 Basic Flow:
   > The customer logs into their account and selects the "Online Check-In" option.
   > They enter required information and confirm their arrival time.
   > The system verifies the details and updates the check-in status.

 Alternate Flow:
   > If the provided information is incomplete or incorrect, the system prompts the customer to correct it.

 Preconditions:
   > The customer must have an active, confirmed booking.

 Postconditions:
   > The customer’s check-in is recorded, helping to expedite on-site procedures.


*Use Case 6: Manager Views Bookings*
User: Admin/Manager
 Basic Flow:
   > The manager logs into the system.
   > They navigate to the bookings dashboard.
   > The system displays current, upcoming, and past reservations with filtering options.

 Alternate Flow:
   > If no bookings are available, a “No bookings found” message is displayed.

 Preconditions:
   > The manager must be authenticated and have access rights to view bookings.

 Postconditions:
   > The manager reviews the booking data to make informed decisions.


*Use Case 7: Manager Manages Employee Accounts*
User: Admin/Manager
 Basic Flow:
   > The manager accesses the Employee Management section.
   > They create, edit, or delete employee accounts as needed.
   > Changes are saved, and confirmation is provided by the system.

 Alternate Flow:
   > If an error occurs (e.g., duplicate username), the system displays an error and prompts for correction.

 Preconditions:
   > The manager must be logged in and have the necessary privileges.

 Postconditions:
   > Employee accounts are updated in the system.


*Use Case 8: Manager Approves/Rejects Employee PTO*
User: Admin/Manager
 Basic Flow:
   > An employee submits a PTO request via their account.
   > The manager reviews the request in their dashboard.
   > The manager approves or rejects the request based on scheduling needs.
   > The system updates the employee’s PTO balance and schedule accordingly.

 Alternate Flow:
   > If the request is incomplete, the manager can request additional information before making a decision.

 Preconditions:
   > A valid PTO request must be submitted by the employee.

 Postconditions:
   > The PTO request status is updated and the employee is notified of the decision.


*Use Case 9: Employee Clock In/Out*
 User: Employee (Clerks, Housekeeping, Valet, Maintenance, etc.)
 Basic Flow:
   > The employee logs into the system at the start of their shift.
   > They click “Clock In” to record the starting time.
   > At the end of the shift, they click “Clock Out.”
   > The system records both timestamps and updates the timesheet.

 Alternate Flow:
   > If a network error occurs, the system allows for manual time entry upon resolution.

 Preconditions:
   > The employee must be scheduled to work and have a valid account.

 Postconditions:
   > The timesheet is updated with accurate clock-in/out times.


*Use Case 10: Employee Checks Bookings & Room Occupancy*
User: Employee (e.g., Clerk, Housekeeping)
 Basic Flow:
   > The employee logs into their account.
   > They navigate to the "Bookings & Occupancy" section.
   > The system displays current bookings and occupancy status for each room.

 Alternate Flow:
   > If no bookings exist, a “No current bookings” message is shown.

 Preconditions:
   > The employee is logged in with appropriate permissions.

 Postconditions:
   > The employee is informed about the current occupancy, helping them plan their tasks.


*Use Case 11: Employee Manages Personal Account*
User: Employee
 Basic Flow:
   > The employee logs into their personal account.
   > They view personal details such as contact information, PTO balance, and timesheet.
   > The employee updates any details (e.g., contact info) or submits a PTO request if needed.
   > The system confirms updates and displays the revised information.

 Alternate Flow:
   > If the update fails (e.g., due to invalid input), an error message is displayed, prompting correction.

 Preconditions:
   > The employee must have an active account and be authenticated.

 Postconditions:
   > The employee’s personal information is updated in the system, and any submitted requests are recorded.


*Use Case 12: Employee Submits Maintenance/Service Requests*
User: Employee (Housekeeping, Maintenance, Valet, etc.)
 Basic Flow:
   > The employee identifies an issue (e.g., broken AC, plumbing problem).
   > They navigate to the “Maintenance/Service Request” section.
   > The employee fills out a form with details of the issue and submits it.
   > The system logs the request and notifies the maintenance team or Manager.

 Alternate Flow:
   > If the submission fails (e.g., due to connectivity issues), an error message is displayed, and the employee is prompted to retry.

 Preconditions:
   > The employee is logged in and has access to the request system.

 Postconditions:
   > A maintenance/service request is recorded, and the responsible party is alerted for follow-up
